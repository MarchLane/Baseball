filter(yearID >= 1961, <= 1970)
S1960s = Teams %>%
filter(yearID >= 1961, =< 1970)
S1960s = Teams %>%
filter(yearID >= 1961, yearID =< 1970)
S1960s = Teams %>%
filter(yearID >= 1961) %>%
filter(yearID <= 1970)
S1960s = Teams %>%
filter(yearID >= 1961) %>%
filter(yearID <= 1970) %>%
select(teamID, yearID, lgID, G, W, L, R, RA)
S1960s
S1960s = S1960s %>%
mutate(RD = R - A, Wpct = W / (W + L))
S1960s = S1960s %>%
mutate(RD = R - RA, Wpct = W / (W + L))
S1960s
linfit
library(broom)
S1960s_aug = augment(linfit, data = S1060s)
S1960s_aug = augment(linfit, data = S1960s)
S1960s = S1960s %>%
mutate(RD = R - RA, Wpct = W / (W + L))
S1960s = Teams %>%
filter(yearID >= 1961) %>%
filter(yearID <= 1970) %>%
select(teamID, yearID, lgID, G, W, L, R, RA)
S1960s
S1960s = S1960s %>%
mutate(RD = R - RA, Wpct = W / (W + L))
linfit = lm(Wpct ~ RD, data = S1960s)
linfit
library(broom)
S1960s_aug = augment(linfit, data = S1960s)
S1960s_aug
S1960S = S1960s %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2))
S1960S = S1960s %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2)
residuals_pyt = Wpct - Wpct_pyt)
S1960S = S1960s %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2),
residuals_pyt = Wpct - Wpct_pyt)
S1960s
S1960S = S1960s %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2))
S1960s
S1960s.cols
S1960s.column
S1960s.column()
S1960s %>%
select(Wpct_pyt)
S1960S = S1960s %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2))
S1960s %>%
select(Wpct_pyt)
S1960S = S1960s %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2))
S1960s %>%
select(Wpct_pyt)
S1960s
S1960s %>%
select(Wpct)
S1960s = S1960s %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2))
S1960s %>%
select(Wpct)
S1960s = S1960s %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2),
residuals_pyt = Wpct - Wpct_pyt))
S1960s = S1960s %>%
mutate(residuals_pyt = Wpct - Wpct_pyt)
S1960s
library(tidyverse)
library(Lahman)
S1960s = Teams %>%
filter(yearID >= 1961) %>%
filter(yearID <= 1970) %>%
select(teamID, yearID, lgID, G, W, L, R, RA)
S1960s
S1960s = S1960s %>%
mutate(RD = R - RA, Wpct = W / (W + L))
linfit = lm(Wpct ~ RD, data = S1960s)
linfit
library(broom)
S1960s_aug = augment(linfit, data = S1960s)
S1960s
S1960s = S1960s %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2))
S1960s = S1960s %>%
mutate(residuals_pyt = Wpct - Wpct_pyt)
S1960s
S1960s_aug
library(tidyverse)
fields = read_csv("/data/all2016.csv")
fields = read_csv("baseball_R-master/data/all2016.csv")
fields = read_csv("C:/Users/jaij2/OneDrive/바탕 화면/Analyzing Baseball Data with R/baseball_R-master/data/fields.csv")
data2016 = read_csv("C:/Users/jaij2/OneDrive/바탕 화면/Analyzing Baseball Data with R/baseball_R-master/data/all2016.csv")
data2016
data2016 = read_csv("C:/Users/jaij2/OneDrive/바탕 화면/Analyzing Baseball Data with R/baseball_R-master/data/all2016.csv",
col_names = pull(fields, Header),
na = character())
data2016
fields
data2016 %>%
mutate(RUNS = AWAY_SCORE_CT + + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) =
data2016
data2016 %>%
mutate(RUNS = AWAY_SCORE_CT + + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) ->
data2016
data2016
data2016 %>%
select(RUNS, HALF.INNING, RUNS.SCORED)
data2016 %>%
select(RUNS.SCORED)
data2016 %>%
select(RUNS.SCORED > 3)
data2016 %>%
select(RUNS.SCORED)
head(data2016)
data2016 %>%
select(RUNS.SCORED)
data2016 %>%
group_by(HALF.INNING) %>%
summarize(Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) ->
half_innings
half_innings
data2016 %>%
inner_join(half_innings, by = 'HALF.INNING') %>%
mutate(RUNS.ROI = MAX.RUNS - RUNS) ->
data2016
data2016
data2016 %>%
select(RUNS.ROI)
data2016 %>%
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) ->
data2016
data2016 %>%
group_by(HALF.INNING) %>%
summarize(Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) ->
half_innings
half_innings
data2016 %>%
inner_join(half_innings, by = 'HALF.INNING') %>%
mutate(RUNS.ROI = MAX.RUNS - RUNS) ->
data2016
data2016 %>%
select(RUNS.ROI)
data2016 %>%
group_by(HALF.INNING) %>%
summarize(Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) ->
half_innings
data2016 %>%
inner_join(half_innings, by = 'HALF.INNING') %>%
mutate(RUNS.ROI = MAX.RUNS - RUNS) ->
data2016
data2016 %>%
inner_join(half_innings, by = 'HALF.INNING') %>%
mutate(RUNS.ROI = MAX.RUNS - RUNS) ->
data2016
fields = read_csv("C:/Users/jaij2/OneDrive/바탕 화면/Analyzing Baseball Data with R/baseball_R-master/data/fields.csv")
data2016 = read_csv("C:/Users/jaij2/OneDrive/바탕 화면/Analyzing Baseball Data with R/baseball_R-master/data/all2016.csv",
col_names = pull(fields, Header),
na = character())
data2016 %>%
mutate(RUNS = AWAY_SCORE_CT + HOME_SCORE_CT,
HALF.INNING = paste(GAME_ID, INN_CT, BAT_HOME_ID),
RUNS.SCORED =
(BAT_DEST_ID > 3) + (RUN1_DEST_ID > 3) +
(RUN2_DEST_ID > 3) + (RUN3_DEST_ID > 3)) ->
data2016
data2016 %>%
group_by(HALF.INNING) %>%
summarize(Outs.Inning = sum(EVENT_OUTS_CT),
Runs.Inning = sum(RUNS.SCORED),
Runs.Start = first(RUNS),
MAX.RUNS = Runs.Inning + Runs.Start) ->
half_innings
data2016 %>%
inner_join(half_innings, by = 'HALF.INNING') %>%
mutate(RUNS.ROI = MAX.RUNS - RUNS) ->
data2016
data2016 %>%
select(RUNS.ROI)
half_innings
data2016
data2016 %>%
select(RUNS)
data2016 %>%
select(MAX.RUNS)
data2016 %>%
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > '', 1, 0),
ifelse(BASE2_RUN_ID > '', 1, 0),
ifelse(BASE3_RUN_ID > '', 1, 0), sep = ''),
STATE = paste(BASEs, OUTS_CT)) ->
data2016
data2016 %>%
mutate(BASES =
paste(ifelse(BASE1_RUN_ID > '', 1, 0),
ifelse(BASE2_RUN_ID > '', 1, 0),
ifelse(BASE3_RUN_ID > '', 1, 0), sep = ''),
STATE = paste(BASES, OUTS_CT)) ->
data2016
data2016
data2016 %>%
select(BASES)
data2016 %>%
select(STATE)
data2016 %>%
mutate(NRUNNER1 =
as.numeric(RUN1_DEST_ID == 1 | BAT_DEST_ID == 1),
NRUNNER2 =
as.numeric(RUN1_DEST_ID == 2 | RUN2_DEST_ID == 2 |
BAT_DEST_ID == 2),
NRUNNER3 =
as.numeric(RUN1_DEST_ID ==3 | RUN2_DEST_ID ==3 |
RUN3_DEST_ID == 3 | BAT_DEST_ID == 3),
NOUTS = OUTS_CT + EVENT_OUTS_CT,
NEW.BASES = paste(NRUNNER1, NRUNNER2,
NRUNNER3, sep = ""),
NEW.STATE = paste(NEW.BASES, NOUTS)) ->
data2016
x = c(1:4)
y = c('apple', 'banana', 'orange')
xy = c(x, y)
xy
xy[5:7]
import numpy as np
data = np.array([[1, 2] , [3, 4], [5, 6]])
data
library(reticulate)
install.packages("reticulate")
library(reticulate)
repl_python()
Y
repl_python()
quit
seq(10)
list(range(0, 10))
repl_python()
quit
list(range(0, 10))
import pandas as pd
repl_python()
import pandas as pd
quit
library(reticulate)
repl_python()
quit
seq(10)
list(range(0, 10))
import pandas as pd
library(tidyverse)
library(Lahman)
tail(Teams, 3)
my_teams = Teams %>%
filter(yearID > 2000) %>%
select(teamID, yearID, lgID, G, W, L, R, RA)
my_teams %>%
tail()
my_teams = my_teams %>%
mutate(RD = R - RA, Wpct = W / (W + L))
run_diff = ggplot(my_teams, aes(x = RD, y = Wpct)) +
geom_point() +
scale_x_continuous('Run differential') +
scale_y_continuous('Winning percentage')
linfit = lm(Wpct ~ RD, data = my_teams)
linfit
run_diff
run_diff +
geom_smooth(method = 'lm', se = FALSE)
library(broom)
my_teams_aug = augment(linfit, data = my_teams)
base_plot = ggplot(my_teams_aug, aes(x = RD, y = .resid)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab('Run differential') + ylab('Residual')
base_plot
highlight_teams = my_teams_aug %>%
arrange(desc(abs(.resid))) %>%
head(4)
library(ggrepel)
base_plot +
geom_point(data = highlight_teams, color = 'blue') +
geom_text_repel(data = highlight_teams, color = 'blue',
aes(label = paste(teamID, yearID)))
resid_summary = my_teams_aug %>%
summarize(N = n(), avg = mean(.resid),
RMSE = sqrt(mean(.resid^2)))
resid_summary
rmse = resid_summary %>%
pull(RMSE)
rmse
my_teams = Teams %>%
filter(yearID > 2000) %>%
select(teamID, yearID, lgID, G, W, L, R, RA)
my_teams %>%
tail()
my_teams = my_teams %>%
mutate(RD = R - RA, Wpct = W / (W + L))
my_teams_aug %>%
summarize(N = n(),
within_one = sum(abs(.resid) < rmse),
within_two = sum(abs(.resid) < 2 * rmse)) %>%
mutate(within_one_pct = within_one / N,
within_two_pct = within_two / N)
my_teams = my_teams %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2))
my_teams = my_teams %>%
mutate(residuals_pyt = Wpct - Wpct_pyt)
my_teams
my_teams
my_teams = my_teams %>%
mutate(logWratio = log(W / L),
logRratio = log(R / RA))
pytFit = lm(logWratio ~ 0 + logRratio, data = my_teams)
pytFit
library(tidyverse)
glheaders = read_csv('baseball_R-master/data/game_log_header.csv')
gl2011 = read_csv('gl1871_2021/gl2011.txt',
col_names = names(glheaders),
na = character())
BOS2011 = gl2011 %>%
filter(HomeTeam == 'BOS' | VisitingTeam == 'BOS') %>%
select(VisitingTeam, HomeTeam,
VisitorRunsScored, HomeRunsScore)
head(BOS2011)
BOS2011 = BOS2011 %>%
mutate(ScoreDiff = ifelse(HomeTeam == 'BOS',
HomeRunsScore - VisitorRunsScored,
VisitorRunsScored - HomeRunsScore),
W = ScoreDiff > 0)
BOS2011
#install.packages('car')
library(skimr)
BOS2011 %>%
group_by(W) %>%
skim(ScoreDiff)
results = gl2011 %>%
select(VisitingTeam, HomeTeam,
VisitorRunsScored, HomeRunsScore) %>%
mutate(winner = ifelse(HomeRunsScore > VisitorRunsScored,
HomeTeam, VisitingTeam),
diff = abs(VisitorRunsScored - HomeRunsScore))
one_run_wins = results %>%
filter(diff == 1) %>%
group_by(winner) %>%
summarize(one_run_w = n())
library(Lahman)
tail(Teams, 3)
teams2011 = my_teams %>%
filter(yearID == 2011) %>%
mutate(teamID = ifelse(teamID == 'LAA', 'ANA',
as.character(teamID))) %>%
inner_join(one_run_wins, by = c('teamID' = 'winner'))
teams2011
library(ggrepel)
ggplot(data = teams2011, aes(x = one_run_w, y = residuals_pyt)) +
geom_point() +
geom_text_repel(aes(label = teamID)) +
xlab('One run wins') + ylab('Pythagorean residuals')
top_closers = Pitching %>%
filter(GF > 50 & ERA < 2.5) %>%
select(playerID, yearID, teamID)
top_closers
my_teams %>%
inner_join(top_closers) %>%
pull(residuals_pyt) %>%
summary()
my_team
D(expression(G * R ^ 2 / (R ^ 2 + RA ^ 2)), 'R')
IR = function(RS = 5, RA = 5) {
(RS ^ 2 + RA ^ 2) ^ 2 / (2 * RS * RA ^ 2)
}
ir_table = expand.grid(RS = seq(3, 6, .5),
RA = seq(3, 6, .5))
head(ir_table)
tail(ir_table)
my_teams = Teams %>%
filter(yearID > 2000) %>%
select(teamID, yearID, lgID, G, W, L, R, RA)
my_teams %>%
tail()
View(run_diff)
my_teams %>%
tail()
my_teams = my_teams %>%
mutate(RD = R - RA, Wpct = W / (W + L))
my_teams
run_diff = ggplot(my_teams, aes(x = RD, y = Wpct)) +
geom_point() +
scale_x_continuous('Run differential') +
scale_y_continuous('Winning percentage')
run_diff
linfit = lm(Wpct ~ RD, data = my_teams)
linfit
run_diff +
geom_smooth(method = 'lm', se = FALSE)
library(broom)
my_teams_aug = augment(linfit, data = my_teams)
my_teams_aug
linfit = lm(Wpct ~ RD, data = my_teams)
linfit
my_teams_aug
base_plot = ggplot(my_teams_aug, aes(x = RD, y = .resid)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab('Run differential') + ylab('Residual')
base_plot
highlight_teams = my_teams_aug %>%
arrange(desc(abs(.resid))) %>%
head(4)
library(ggrepel)
base_plot +
geom_point(data = highlight_teams, color = 'blue') +
geom_text_repel(data = highlight_teams, color = 'blue',
aes(label = paste(teamID, yearID)))
library(broom)
my_teams_aug = augment(linfit, data = my_teams)
my_teams_aug
base_plot = ggplot(my_teams_aug, aes(x = RD, y = .resid)) +
geom_point(alpha = 0.3) +
geom_hline(yintercept = 0, linetype = 3) +
xlab('Run differential') + ylab('Residual')
base_plot
highlight_teams = my_teams_aug %>%
arrange(desc(abs(.resid))) %>%
head(4)
highlight_teams
highlight_teams = my_teams_aug %>%
arrange(desc(abs(.resid))) %>%
head(4)
highlight_teams
library(ggrepel)
base_plot +
geom_point(data = highlight_teams, color = 'blue') +
geom_text_repel(data = highlight_teams, color = 'blue',
aes(label = paste(teamID, yearID)))
base_plot
resid_summary = my_teams_aug %>%
summarize(N = n(), avg = mean(.resid),
RMSE = sqrt(mean(.resid^2)))
resid_summary
base_plot
base_plot +
geom_point(data = highlight_teams, color = 'blue') +
geom_text_repel(data = highlight_teams, color = 'blue',
aes(label = paste(teamID, yearID)))
base_plot
base_plot +
geom_point(data = highlight_teams, color = 'blue') +
geom_text_repel(data = highlight_teams, color = 'blue',
aes(label = paste(teamID, yearID)))
resid_summary = my_teams_aug %>%
summarize(N = n(), avg = mean(.resid),
RMSE = sqrt(mean(.resid^2)))
resid_summary
rmse = resid_summary %>%
pull(RMSE)
rmse
my_teams = Teams %>%
filter(yearID > 2000) %>%
select(teamID, yearID, lgID, G, W, L, R, RA)
my_teams %>%
tail()
my_teams = my_teams %>%
mutate(RD = R - RA, Wpct = W / (W + L))
my_teams_aug %>%
summarize(N = n(),
within_one = sum(abs(.resid) < rmse),
within_two = sum(abs(.resid) < 2 * rmse)) %>%
mutate(within_one_pct = within_one / N,
within_two_pct = within_two / N)
my_teams = my_teams %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2))
my_teams = my_teams %>%
mutate(residuals_pyt = Wpct - Wpct_pyt)
my_teams
my_teams_aug %>%
summarize(N = n(),
within_one = sum(abs(.resid) < rmse),
within_two = sum(abs(.resid) < 2 * rmse)) %>%
mutate(within_one_pct = within_one / N,
within_two_pct = within_two / N)
my_teams = my_teams %>%
mutate(Wpct_pyt = R ^ 2 / (R ^ 2 + RA ^ 2))
my_teams = my_teams %>%
mutate(residuals_pyt = Wpct - Wpct_pyt)
my_teams
